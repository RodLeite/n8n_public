services:
  n8n-worker: # Recomenda-se um nome de servi√ßo diferente do 'main'
    image: 'n8nio/n8n:latest'
    networks:
      - coolify
    command: worker # Define o container para rodar como 'worker'
    environment:
      - SERVICE_FQDN_N8N_5678
      - 'N8N_EDITOR_BASE_URL=${SERVICE_FQDN_N8N}'
      - 'WEBHOOK_URL=${SERVICE_FQDN_N8N}'
      - 'N8N_HOST=${SERVICE_URL_N8N}'
      - GENERIC_TIMEZONE=America/Sao_Paulo
      - TZ=America/Sao_Paulo
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_PORT=5432
      - 'DB_POSTGRESDB_HOST=${POSTGRES_CONTAINER_NAME}'
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=postgres
      - 'DB_POSTGRESDB_PASSWORD=${POSTGRES_PW}'
      - N8N_ENCRYPTION_KEY=SUAENCRYTIONKEY # Apos gerar sua chave do n8n-main cole aqui (MAIN E WORKER PRECISAM SER IGUAIS)
      - 'QUEUE_BULL_REDIS_HOST=${REDIS_CONTAINER_NAME}'
      - 'QUEUE_BULL_REDIS_PASSWORD=${REDIS_PW}'
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_DB=2
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_SECURE_COOKIE=true
      - EXECUTIONS_MODE=queue
      - N8N_RUNNERS_ENABLED=true
    volumes:
      - 'n8n-data:/home/node/.n8n'
    healthcheck:
      test:
        - CMD-SHELL
        - 'wget -qO- http://127.0.0.1:5678/'
      interval: 5s
      timeout: 20s
      retries: 10

networks:
  coolify:
    driver: bridge